#include <map>
#include <vector>

namespace RP_data
{
    // is done for N = 3, check if that matters for the other N
	static struct default_pars
	{
        const static int minNs_ = 6;

		// bandwidth
		static inline std::map<double, std::vector<double>> bandwidth_ = {
            { 0.500, {11.91364910, 13.80639243, 16.07481611, 19.33584048, 22.95334610, 26.99680237, 32.14821847, 38.20478967, 45.37626653, 53.91213849, 64.1050231457745 }},
            { 0.600, {9.941745237, 11.07993471, 12.55917996, 14.45205620, 16.50968175, 18.69188800, 21.43464051, 24.54348625, 28.12557547, 32.22076458, 36.9592035556994 }},
            { 0.700, {8.389329299, 9.047785260, 10.03608156, 11.01905700, 12.09821620, 13.18499353, 14.50561122, 15.99208722, 17.63278958, 19.45442506, 21.4826390810998 }},
            { 0.800, {7.198900884, 7.582169118, 8.335617943, 8.696752611, 9.245096812, 9.757641509, 10.36382959, 10.94436856, 11.69622233, 12.38164218, 13.1979661451201 }},
            { 0.900, {6.352386665, 6.586083032, 7.269981646, 7.283259453, 7.631714321, 7.990506707, 8.394347034, 8.692934701, 9.216881386, 9.627841978, 10.1518612379344 }},
            { 1.000, {5.729760708, 5.984615747, 6.593307593, 6.476742420, 6.735784606, 7.151697583, 7.537753421, 7.772043821, 8.269975420, 8.655208472, 9.15166922286773 }},
            { 1.100, {5.288842088, 5.611176728, 6.171017236, 6.025201713, 6.253532517, 6.762522333, 7.163270275, 7.393609479, 7.909976526, 8.310221339, 8.82364656021750 }},
            { 1.200, {5.005309124, 5.376767119, 5.911344257, 5.779066354, 5.997388339, 6.581386104, 6.999032257, 7.240277056, 7.773097873, 8.187878296, 8.71627077993104 }},
            { 1.300, {4.837578228, 5.232400056, 5.753481833, 5.647452232, 5.861658386, 6.496883558, 6.926804306, 7.179804550, 7.720970502, 8.144485505, 8.68128024108352 }},
            { 1.400, {4.736558428, 5.147395540, 5.658246496, 5.578125466, 5.789556148, 6.457522820, 6.894919925, 7.155604903, 7.701061749, 8.129078094, 8.66997639007720 }},
            { 1.500, {4.674708964, 5.102271365, 5.600878304, 5.542058258, 5.751076592, 6.439242474, 6.880764662, 7.145909735, 7.693422207, 8.123594761, 8.66638307592192 }},
            { 1.600, {4.636715302, 5.082862739, 5.566129586, 5.523520677, 5.730384728, 6.430785160, 6.874426520, 7.142047218, 7.690468652, 8.121635311, 8.66527529813269 }},
            { 1.700, {4.613484079, 5.077801641, 5.544848482, 5.514137959, 5.719114434, 6.426892676, 6.871552986, 7.140524666, 7.689313341, 8.120930292, 8.66495436793711 }},
            { 1.800, {4.599446161, 5.079606679, 5.531622452, 5.509496080, 5.712857402, 6.425114381, 6.870227112, 7.139935367, 7.688853328, 8.120673772, 8.66487404885877 }},
            { 1.900, {4.591137015, 5.084255327, 5.523260921, 5.507282834, 5.709297194, 6.424310895, 6.869600618, 7.139714471, 7.688665330, 8.120578767, 8.66486222521189 }},
            { 2.000, {4.586383290, 5.089750479, 5.517875380, 5.506293876, 5.707213502, 6.423954025, 6.869295397, 7.139636489, 7.688585668, 8.120542616, 8.66486675121419 }},
            { 2.100, {4.583816446, 5.095141453, 5.514338643, 5.505906644, 5.705957228, 6.423799853, 6.869141098, 7.139612288, 7.688550296, 8.120528311, 8.66487308383659 }},
            { 2.200, {4.582574593, 5.100011722, 5.511970394, 5.505802994, 5.705177461, 6.423736353, 6.869059793, 7.139607219, 7.688533701, 8.120522347, 8.66487795242919 }},
            { 2.300, {4.582116675, 5.104216994, 5.510354501, 5.505823229, 5.704680332, 6.423712485, 6.869015073, 7.139608194, 7.688525447, 8.120519701, 8.66488115492787 }},
            { 2.400, {4.582105366, 5.107748384, 5.509232481, 5.505889447, 5.704355920, 6.423705284, 6.868989453, 7.139610522, 7.688521110, 8.120518444, 8.66488312828463 }}};

		// variance
		static inline std::map<double, std::vector<double>> variance_ = {
            { 0.500, {9.738379643, 12.72466004, 17.09818204, 23.71552337, 32.99143515, 46.19987469, 65.01948801, 91.50521628, 129.02901140, 182.02792551, 256.02792551   }},
            { 0.600, {6.767279664, 8.208344599, 10.21417523, 13.17450639, 16.98388348, 22.08264147, 28.87812326, 37.76803185, 49.52296373,  65.01209786,  80.01209786    }},
            { 0.700, {4.802579396, 5.428187823, 6.259973692, 7.527569086, 8.981946692, 10.83241305, 13.14706621, 15.94409793, 19.39585998,  23.64082785,  25.64082785    }},
            { 0.800, {3.502701179, 3.716770364, 3.988594904, 4.502807388, 4.982278699, 5.584582421, 6.299980370, 7.080918699, 7.979856049,  9.013918225,  11.013918225   }},
            { 0.900, {2.642128991, 2.663245635, 2.683813325, 2.882871168, 2.983364225, 3.136783466, 3.319781027, 3.481408097, 3.654020186,  3.842550403,  3.942550403    }},
            { 1.000, {2.071948753, 2.014706492, 1.934248612, 2.015496082, 1.984557189, 1.995118494, 2.022684675, 2.019589937, 2.014847662,  2.014211038,  2.014211038    }},
            { 1.100, {1.693809038, 1.615469226, 1.503612078, 1.551213653, 1.485613432, 1.462699838, 1.458163766, 1.425931118, 1.393725270,  1.367804531,  1.367804531    }},
            { 1.200, {1.442736999, 1.369698411, 1.256181867, 1.302800577, 1.236466654, 1.214445400, 1.212489977, 1.184845907, 1.158368726,  1.139270715,  1.139270715    }},
            { 1.300, {1.275797420, 1.218399745, 1.113998932, 1.169964597, 1.112123146, 1.098717795, 1.105586056, 1.086944566, 1.069188245,  1.058475018,  1.058475018    }},
            { 1.400, {1.164607472, 1.125257443, 1.032282020, 1.098988402, 1.050113942, 1.044788508, 1.059074406, 1.047190434, 1.035396993,  1.029911333,  1.029911333    }},
            { 1.500, {1.090395869, 1.067916100, 0.985306857, 1.061106085, 1.019224280, 1.019670280, 1.038842879, 1.031049171, 1.022593629,  1.019813679,  1.019813679    }},
            { 1.600, {1.040741135, 1.032614025, 0.958295546, 1.040917371, 1.003860725, 1.007979993, 1.030045729, 1.024496286, 1.017742755,  1.016244294,  1.016244294    }},
            { 1.700, {1.007418065, 1.010879644, 0.942758004, 1.030180435, 0.996236417, 1.002545256, 1.026222573, 1.021836584, 1.015905044,  1.014982727,  1.014982727    }},
            { 1.800, {0.984975607, 0.997497892, 0.933816131, 1.024486628, 0.992464901, 1.000022822, 1.024562424, 1.020757427, 1.015208945,  1.014536934,  1.014536934    }},
            { 1.900, {0.969797558, 0.989258362, 0.928666808, 1.021479297, 0.990607878, 0.998854917, 1.023842425, 1.020319801, 1.014945334,  1.014379465,  1.014379465    }},
            { 2.000, {0.959481988, 0.984184693, 0.925699018, 1.019899848, 0.989699685, 0.998316116, 1.023530758, 1.020142483, 1.014845544,  1.014323875,  1.014323875    }},
            { 2.100, {0.952431119, 0.981060193, 0.923986680, 1.019076970, 0.989259956, 0.998068886, 1.023396238, 1.020070733, 1.014807792,  1.014304271,  1.014304271    }},
            { 2.200, {0.947580172, 0.979135825, 0.922997295, 1.018653224, 0.989050251, 0.997956370, 1.023338439, 1.020041761, 1.014793524,  1.014297370,  1.014297370    }},
            { 2.300, {0.944218015, 0.977950444, 0.922424568, 1.018438752, 0.988952582, 0.997905806, 1.023313777, 1.020030102, 1.014788141,  1.014294948,  1.014294948    }},
            { 2.400, {0.941868455, 0.977220133, 0.922092231, 1.018333049, 0.988908827, 0.997883533, 1.023303370, 1.020025435, 1.014786116,  1.014294102,  1.014294102    }}};
		
        static int getIndex(int _Ns)                               { return _Ns - minNs_; };
        static double getBandwidth(double gamma, int _Ns)          { return bandwidth_.contains(gamma) ? bandwidth_[gamma][getIndex(_Ns)] : 4.0 * std::sqrt(1 + std::pow(2, (1 - gamma) * _Ns)); };
        static double getVariance(double gamma, int _Ns)           { return variance_.contains(gamma) ? variance_[gamma][getIndex(_Ns)] : 4.0 * std::sqrt(1 + std::pow(2, (1 - gamma) * _Ns)); };
	} default_pars;


};